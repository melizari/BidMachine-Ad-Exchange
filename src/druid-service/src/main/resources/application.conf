play.application.loader = com.appodealx.exchange.druid.DruidServiceProdLoader

play.server.akka.default-host-header = "localhost"
play.server.akka.default-host-header = ${?HOST}

play.filters.headers.contentSecurityPolicy = null

akka.http.client.parsing.max-content-length = 500M

akka.http.client.idle-timeout = 360s
akka.http.client.request-timeout = 300s

akka.http.host-connection-pool.idle-timeout = 300s
akka.http.host-connection-pool.client.idle-timeout = 300s

akka.log-config-on-start = off

play.server.http.idleTimeout = 360s
play.server.akka.requestTimeout = 300s

play.ws.ahc.idleConnectionInPoolTimeout = 300s

play.http.secret.key = "QCY?tAnfk?aZ?iwrNwnxIlR6CTf:G3gf:90Latabg@5241AB`R5W:1uDFN];Ik@n"
play.http.secret.key = ${?APPLICATION_SECRET}

prefix = "/"
prefix = ${?PROXY_PATH}

api.version="v1"

locator.app = "exchange"
locator.env = "staging2"


druid = {

  broker.url = ${?DRUID_BROKER_URL}

  host = ${?DRUID_HOST}
  port = 8082
  port = ${?DRUID_PORT}
  secure = false
  secure = ${?DRUID_USE_SECURE_CONNECTION}
  url = "/druid/v2/"
  url = ${?DRUID_URL}

  datasource = ${?DRUID_DATASOURCE}

  response-parsing-timeout = 5 seconds
  response-parsing-timeout = ${?DRUID_RESPONSE_PARSING_TIMEOUT}
}




locator {
  name = "marathon"
  name = ${?LAGOM_LOCATOR_NAME}

  marathon.app = "exchange"
  marathon.env = "production"
  marathon.env = ${?ENV}

  # All params required for k8s locator!
  kubernetes.cluster = "svc.cluster.local"
  kubernetes.cluster = ${?CLUSTER}
  kubernetes.namespace = "exchange"
  kubernetes.namespace = ${?NAMESPACE}
}