# https://www.playframework.com/documentation/latest/Configuration

play.application.loader = "ApiGatewayProdLoader"

play.server.akka.default-host-header = "localhost"
play.server.akka.default-host-header = ${?HOST}

play.filters.headers.contentSecurityPolicy = null

play.http.secret.key = "QCY?tAnfk?aZ?iwrNwnxIlR6CTf:G3gf:90Latabg@5241AB`R5W:1uDFN];Ik@n"
play.http.secret.key = ${?APPLICATION_SECRET}

akka.http.client.parsing.max-content-length = 500M
play.http.parser.maxMemoryBuffer = 500M

play.server.http.idleTimeout = 360s
play.server.akka.requestTimeout = 300s

akka.http.client.idle-timeout = 360s
akka.http.host-connection-pool.idle-timeout = 360s

play.ws.timeout.connection = 120s
play.ws.timeout.idle = 360s
play.ws.timeout.request = 300s

akka.http.host-connection-pool.idle-timeout = 300s
akka.http.host-connection-pool.client.idle-timeout = 300s

# Circuit breakers for calls to other services are configured
# in this section. A child configuration section with the same
# name as the circuit breaker identifier will be used, with fallback
# to the `lagom.circuit-breaker.default` section.
lagom.circuit-breaker {
  ssp-report {
    enable = off
    #max-failures = 1
    #call-timeout = 240s
    #reset-timeout = 300s
    #exception-whitelist = []
  }
}

slick {
  dbs {
    default {
      driver = "com.appodealx.exchange.common.db.PostgresProfile$"
      db.driver = "org.postgresql.Driver"
      db.url = ${?DATABASE_URL}
    }
  }
}

prefix = "/"
prefix = ${?PROXY_PATH}

play.evolutions.autoApply = true

api.version = "v1"

swagger.api {

  basepath = ${prefix}

  info.title = "Ad Exchange API"

  securityDefinitions {
    authToken {
      type = "apiKey"
      name = "X-Auth-Token"
      in = "header"
    }
  }

  security = [{name = "authToken"}]
}

locator {
  name = "marathon"
  name = ${?LAGOM_LOCATOR_NAME}

  marathon.app = "exchange"
  marathon.env = "production"
  marathon.env = ${?ENV}

  # All params required for k8s locator!
  kubernetes.cluster = "svc.cluster.local"
  kubernetes.cluster = ${?CLUSTER}
  kubernetes.namespace = "exchange"
  kubernetes.namespace = ${?NAMESPACE}
}

silhouette {
  authenticator.sharedSecret = "key1"
  authenticator.sharedSecret = ${?SHARED_SECRET}
}

reporting {
  ssp {
    rate-limit {
      size = 2
      rate = 0.02
    }
  }
}

pathRenewPassword = "/recovery/renew"
pathRenewPassword = ${?PATH_RENEW_PASSWORD}

mandrill {
  apiKey = ${?MANDRILL_API_KEY}
  url = "https://mandrillapp.com/api/1.0/messages/send-template.json"
  fromEmail = "example@example.com"
  fromName = "Stack"

  contentUser.name = "USER_NAME"
  contentCompany.name = "COMPANY_NAME"
  contentUrl.name = "CLICK_URL"

  templates {
    welcome {
      name = "Exchange_Password_Reset"
      name = ${?TEMPLATE_WELCOME}
      subject = "Password recovery link"
      subject = ${?SUBJECT_WELCOME}
    }

    forgotPassword {
      name = "Exchange_Password_Reset"
      name = ${?TEMPLATE_FORGOT}
      subject = "Password recovery link"
      subject = ${?SUBJECT_FORGOT}
    }

    announcing {
      name = "Exchange_UI_update"
      name = ${?TEMPLATE_ANNOUNCING}
      subject = "âœ… Announcing New UI for DSPs"
      subject = ${?SUBJECT_ANNOUNCING}
    }
  }
}