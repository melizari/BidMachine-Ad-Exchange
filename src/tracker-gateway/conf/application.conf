play.application.loader = AdTrackerApplicationLoader

play.http.secret.key = "QCY?tAnfk?aZ?iwrNwnxIlR6CTf:G3gf:90Latabg@5241AB`R5W:1uDFN];Ik@n"
play.http.secret.key = ${?APPLICATION_SECRET}

play.i18n {
  langs = [ "en" ]
}

play.server {
  akka {
    default-host-header = "localhost"
    default-host-header = ${?HOST}
  }
}

akka.http {
  parsing {
    max-uri-length = 16k
  }

  server {
    max-connections = 8192
    pipelining-limit = 1024
  }
}

play.ws.ahc {
  //keepAlive = true
  maxConnectionsTotal = 20000
}

# For debug environment no need tracking
tracking.notice.urls.nottrack = false
tracking.notice.urls.nottrack = ${?DEBUG_NOT_TRACK_NOTICE_URLS}

# TTL for tracking isAlive and "not tracking after" in seconds, default 12 hours (43200 sec)

tracking.ttl.seconds = 43200
tracking.ttl.seconds = ${?TRACKING_TTL_SECONDS}
tracking.banner.default.external.segment.id = -1
tracking.banner.default.external.segment.id = ${?DEFAULT_EXTERNAL_SEGMENT_ID}
tracking.banner.default.external.placement.id = -1
tracking.banner.default.external.placement.id = ${?DEFAULT_EXTERNAL_PLACEMENT_ID}

redis.host = "localhost"
redis.host = ${?REDIS_HOST}
redis.port = 6379
redis.port = ${?REDIS_PORT}

# MESOS_TASK_ID for DCOS and POD_ID for K8s
application-task-id = "no_mesos_task_id"
application-task-id = ${?MESOS_TASK_ID}
application-task-id = ${?POD_ID}

settings {
  data-center-metadata {
    id = "EU"
    id = ${?DATACENTER_ID}
  }
}

kafka {
  bootstrap {
    servers = "localhost:9092"
    servers = ${?KAFKA_BROKERS}
  }
  topics {
    impressions = "tracking.impressions"
    impressions = ${?KAFKA_TRACKING_IMPRESSIONS_TOPIC}
    clicks = "tracking.clicks"
    clicks = ${?KAFKA_TRACKING_CLICKS_TOPIC}
    finish = "tracking.finish"
    finish = ${?KAFKA_TRACKING_FINISH_TOPIC}
    fills = "tracking.fills"
    fills = ${?KAFKA_TRACKING_FILLS_TOPIC}
    custom-loaded-event = "tracking.custom-loaded-event"
    custom-loaded-event = ${?KAFKA_TRACKING_CUSTOM_LOADED_EVENT_TOPIC}
    errors = "errors.staging"
    errors = ${?KAFKA_ERRORS_TOPIC}
    invalid = "tracking.nonvalidevents"
    invalid = ${?KAFKA_NONVALID_EVENT_TOPIC}
    events = "tracking.events"
    events = ${?KAFKA_TRACKING_EVENTS_TOPIC}
  }
}