play.application.loader = "AuctionGatewayLoader"

play.http.secret.key = "8rbkCRhYgRzxA1pPFJUbYqPR7uxpQSejWZ2XzBpWCMM="
play.http.secret.key = ${?APPLICATION_SECRET}

play.i18n {
  langs = [ "en" ]
}

play.server {
  akka {
    default-host-header = "localhost"
    default-host-header = ${?HOST}
  }

  netty {
    maxInitialLineLength = 8192
    transport = "native"
  }
}

akka.http {
  parsing {
    illegal-header-warnings = off
    max-uri-length = 8k
  }

  # Trying to turn off annoing warnings
  server.parsing.illegal-header-warnings = off
  client.parsing.illegal-header-warnings = off

  server {
    max-connections = 8192
    pipelining-limit = 1024
  }
}

play.ws.ahc {
  keepAlive = true
  maxConnectionsTotal = 20000
}

slick {
  dbs {
    default {
      driver = "com.appodealx.exchange.common.db.PostgresProfile$"
      db.driver = "org.postgresql.Driver"
      numThreads = 4
      db.url = ${?DATABASE_URL}
    }
  }
}

locator {
  name = "marathon"
  name = ${?LAGOM_LOCATOR_NAME}

  marathon.app = "exchange"
  marathon.env = "production"
  marathon.env = ${?ENV}

  # All params required for k8s locator!
  kubernetes.cluster = "svc.cluster.local"
  kubernetes.cluster = ${?CLUSTER}
  kubernetes.namespace = "exchange"
  kubernetes.namespace = ${?NAMESPACE}
}

external.app.service.cache.ttl = "30 min"
external.app.service.cache.ttl = ${?APP_CACHE_TTL}
external.app.service.request.timeout.ms = 500
external.app.service.request.timeout.ms = ${?APP_REQUEST_TIMEOUT_MS}

external.domain = ${?EXTERNAL_DOMAIN}

external.app.service.url = "/exchange/v1/apps/"
external.app.service.url = ${?EXTERNAL_APP_URL}

external.service.appodeal.user = ${?EXTERNAL_USER}
external.service.appodeal.password = ${?EXTERNAL_PASS}
external.service.appodeal.key = "exchange-key"
external.service.appodeal.key = ${?EXTERNAL_EXCHANGE_KEY}
external.service.appodeal.secret = "changeme"
external.service.appodeal.secret = ${?EXTERNAL_EXCHANGE_SECRET}

auction.service.price-margin = 0.01
auction.service.price-margin = ${?AUCTION_PRICEMARGIN}

redis {
  host = ${?REDIS_HOST}
  port = 6379
  port = ${?REDIS_PORT}

  qps {
    host = ${?REDIS_QPS_HOST}
    port = 6379
    port = ${?REDIS_QPS_PORT}
  }

  applovin {
    host = ${?REDIS_APPLOVIN_HOST}
    port = 6379
    port = ${?REDIS_APPLOVIN_PORT}
    ttl  = "300 s"
    ttl  = ${?REDIS_APPLOVIN_TTL}
  }

  criteo {
    host = ${?REDIS_CRITEO_HOST}
    port = 6379
    port = ${?REDIS_CRITEO_PORT}
  }
}

marathon-app-id = "NO_MARATHON_APP_ID"
marathon-app-id = ${?MARATHON_APP_ID}

settings {
  auction = {
    multi-floors-enabled = false
    multi-floors-enabled = ${?MULTI_PRICE_FLOOR}

    floors-limit = 10
    floors-limit = ${?FLOORS_LIMIT}

    win-notification-timeout-ms = 1000
    win-notification-timeout-ms = ${?AUCTION_WIN_NOTIFICATION_TIMEOUT_MS}

    loss-notification-timeout-ms = 500
    loss-notification-timeout-ms = ${?AUCTION_LOSS_NOTIFICATION_TIMEOUT_MS}
  }
  default {
    # timeout for bid request, ms
    tMax = 300
    tMax = ${?SETTINGS_TMAX_MS}

    pbTmax = 500
    pbTmax = ${?SETTINGS_PB_TMAX_MS}

    android-callback-secure-scheme = true
    android-callback-secure-scheme = ${?ANDROID_CALLBACK_SECURE_SCHEME}

    loaded-event-pixel-enabled = true
    loaded-event-pixel-enabled = ${?LOADED_EVENT_PIXEL_ENABLED}
  }
  cache {
    redis {
      ttl = "60 s"
      ttl = ${?GLOBAL_SETTINGS_REDIS_CACHE_TTL}
    }
    local {
      ttl = "60 s"
      ttl = ${?GLOBAL_SETTINGS_LOCAL_CACHE_TTL}
    }
  }

  pb {
    criteo {
      enabled-apps = ${?ADNETWORK_CRITEO_ENABLED_APPS}
      disabled-apps = ${?ADNETWORK_CRITEO_DISABLED_APPS}
      ttl  = "300 s"
      ttl  = ${?REDIS_CRITEO_TTL}

      cdb {
        zones {
          banner {
            320x50   = ${?ADNETWORK_CRITEO_ZONE_320_50}
            728x90   = ${?ADNETWORK_CRITEO_ZONE_728_90}
            320x480  = ${?ADNETWORK_CRITEO_ZONE_320_480}
            480x320  = ${?ADNETWORK_CRITEO_ZONE_480_320}
            768x1024 = ${?ADNETWORK_CRITEO_ZONE_768_1024}
            1024x768 = ${?ADNETWORK_CRITEO_ZONE_1024_768}
          }

          native = ${?ADNETWORK_CRITEO_ZONE_NATIVE}
        }
      }

      s2s {
        ru {
          zones {
            banner {
              320x50 = ${?ADNETWORK_CRITEO_RU_ZONE_320_50}
              480x320 = ${?ADNETWORK_CRITEO_RU_ZONE_480_320}
              320x480 = ${?ADNETWORK_CRITEO_RU_ZONE_320_480}
              1024x768 = ${?ADNETWORK_CRITEO_RU_ZONE_1024_768}
              768x1024 = ${?ADNETWORK_CRITEO_RU_ZONE_768_1024}
              728x90 = ${?ADNETWORK_CRITEO_RU_ZONE_728_90}
            }
          }
        }

        na {
          zones {
            banner {
              320x50 = ${?ADNETWORK_CRITEO_US_ZONE_320_50}
              728x90 = ${?ADNETWORK_CRITEO_US_ZONE_728_90}
              320x480 = ${?ADNETWORK_CRITEO_US_ZONE_320_480}
              480x320 = ${?ADNETWORK_CRITEO_US_ZONE_480_320}
              768x1024 = ${?ADNETWORK_CRITEO_US_ZONE_768_1024}
              1024x768 = ${?ADNETWORK_CRITEO_US_ZONE_1024_768}
            }
          }
        }
      }
    }
    pubnative {
      apptoken = "changeme"
      apptoken = ${?ADNETWORK_PUBNATIVE_APPTOKEN}
    }
    rubicon {

      user = "unknown"
      user = ${?ADNETWORK_RUBICON_USER}
      password = "changeme"
      password = ${?ADNETWORK_RUBICON_PASSWORD}

      allowed-ipv6 = true
      allowed-ipv6 = ${?ADNETWORK_RUBICON_ALLOWED_IPV6}

      enabled-apps =  ""
      enabled-apps =  ${?ADNETWORK_RUBICON_ENABLED_APPS}

      countries-excluded = ""
      countries-excluded = ${?ADNETWORK_RUBICON_COUNTRY_BLACKLIST}

      account-id = 0
      account-id = ${?ADNETWORK_RUBICON_ACCOUNT_ID}

      site-id = 0
      site-id = ${?ADNETWORK_RUBICON_SITE_ID}

      zone-id = 0
      zone-id = ${?ADNETWORK_RUBICON_ZONE_ID}

      banner {
        300x250 = ${?ADNETWORK_RUBICON_BANNER_ZONE_300_250}
        320x50 = ${?ADNETWORK_RUBICON_BANNER_ZONE_320_50}
        320x480  = ${?ADNETWORK_RUBICON_BANNER_ZONE_320_480}
        480x320 = ${?ADNETWORK_RUBICON_BANNER_ZONE_480_320}
        728x90 = ${?ADNETWORK_RUBICON_BANNER_ZONE_728_90}
        768x1024 = ${?ADNETWORK_RUBICON_BANNER_ZONE_768_1024}
        1024x768 = ${?ADNETWORK_RUBICON_BANNER_ZONE_1024_768}
      }

      video {
        size-id = 0
      }
    }
    facebook {
      endpoint = "http://an.facebook.com/placementbid.ortb"
      endpoint = ${?ADNETWORK_FACEBOOK_ENDPOINT}
    }
    openx {
      notify-ttl-ms = 500
      notify-ttl-ms = ${?ADNETWORK_OPENX_NOTIFY_DEFAULT}
      enabled-apps = ""
      enabled-apps = ${?ADNETWORK_OPENX_ENABLED_APPS}
    }

    hangmyads {
      internal-id = 0
      internal-id = ${?ADNETWORK_HANGMYADS_INTERNAL_ID}
      cpm-scheme  = "min"
      cpm-scheme  = ${?ADNETWORK_HANGMYADS_CPM_SCHEME}
      ttl  = "300 s"
      ttl  = ${?REDIS_HANGMYADS_TTL}
    }
  }

  pubmatic {
    rtb {
      publisher-id = ${?ADNETWORK_PUBMATIC_RTB_PUBLISHER_ID}
      enabled-apps = ${?ADNETWORK_PUBMATIC_RTB_ENABLED_APPS}
    }
    pb {
      publisher-id = ${?ADNETWORK_PUBMATIC_PB_PUBLISHER_ID}
      enabled-apps = ${?ADNETWORK_PUBMATIC_PB_ENABLED_APPS}
    }
  }

  geoip {
    ttl = "900 ms"
    ttl = ${?GEOIP_TTL}
    maxmind {
      lru-cache-size = 20000
      lru-cache-size = ${?MAXMIND_LRU_CACHE_SIZE}
      path = "/opt/maxmind/GeoIP2-City.mmdb"
      path = ${?MESOS_SANDBOX}"/GeoIP2-City.mmdb"
      path = ${?GEOIP_MAXMIND_DB_PATH}
    }
  }
  data-center-metadata {
    id = "EU"
    id = ${?DATACENTER_ID}
    # Endpoints of Data Center (for RTB 3.0 init method)
    eu-endpoints = ${?EU_ENDPOINTS}
    us-endpoints = ${?US_ENDPOINTS}
  }
  bm {
    expiration-time = 1740 // 29 minutes
    expiration-time = ${?AD_EXPIRATION_TIME_SECONDS}

    viewability-time-threshold = 1 // 1 second
    viewability-time-threshold = ${?AD_VIEWABILITY_TIME_THRESHOLD}

    # Array of additional blocked attributes
    blocked-attributes {
      # 5, 8, 9, 10, 14
      interstitial = "5, 8, 9, 10, 14"
      interstitial = ${?BM_INTERSTITIAL_BLOCKED_ATTRIBUTES}

      # 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15
      banner = "1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15"
      banner = ${?BM_BANNER_BLOCKED_ATTRIBUTES}
    }

    # Format: "<seller_long_type_value_a>:<bid_floor_double_value_a_1>,...,<bid_floor_double_value_a_n>;
    # <seller_long_type_value_b>:<bid_floor_double_value_b_1>,...,<bid_floor_double_value_b_m>"
    custom {
      bid-floors = ""
      bid-floors = ${?BM_OVERRIDE_SELLER_BIDFLOORS}
      limits = ""
      limits = ${?BM_SELLER_FLOOR_LIMIT}
    }
  }
  forensiq {
    key = "changeme"
    key = ${?FORENSIQ_KEY}
    apps-by-seller = ""
    apps-by-seller = ${?FORENSIQ_APPS_BY_SELLER}
  }
  marketplace {
    marketplaces-by-seller = ""
    marketplaces-by-seller = ${?MARKETPLACES_BY_SELLER}
  }
}

kafka {
  bootstrap {
    servers = ${?KAFKA_BROKERS}
  }
  topics {
    bidRequests = ${?KAFKA_BID_REQUESTS_TOPIC}
    debugBidRequest = ${?KAFKA_DEBUG_BID_REQUESTS_TOPIC}
    bids = ${?KAFKA_BIDS_TOPIC}
    adNetworkBids = ${?KAFKA_ADNETWORK_BIDS_TOPIC}
    adNetworkRequest = ${?KAFKA_ADNETWORK_REQUEST_TOPIC}
  }
}
xkamon.env = "dev"
xkamon.env = ${?ENV}

kamon {

  prometheus.include-environment-tags = yes

  environment {

    host = ${HOSTNAME}

    tags {
      env = ${xkamon.env}
    }
  }

  metric {
    tick-interval = 1 second
  }
}